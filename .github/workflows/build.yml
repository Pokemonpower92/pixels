name: Build Pipeline

on:
  push:
    branches:
      - main
    paths:
      - "cmd/**"
      - "internal/**"
      - ".github/workflows/**"
      - "build/**"  

permissions:
  contents: write
  packages: write

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      short_sha: ${{ steps.set-sha.outputs.short_sha }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Detect Services
        id: set-matrix
        run: |
          SERVICES=$(find cmd -maxdepth 1 -mindepth 1 -type d -exec basename {} \; | jq -R -s -c 'split("\n")[:-1]')
          echo "matrix={\"service\":$SERVICES}" >> $GITHUB_OUTPUT
      - name: Set short SHA
        id: set-sha
        run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          echo "short_sha=${SHORT_SHA}" >> $GITHUB_OUTPUT
          
  build-and-push:
    needs: detect-changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJson(needs.detect-changes.outputs.matrix).service }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create new tag
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git tag "${{ matrix.service }}-${{ needs.detect-changes.outputs.short_sha }}"
          git push origin "${{ matrix.service }}-${{ needs.detect-changes.outputs.short_sha }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set repository name
        id: repo
        run: |
          echo "repo=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./build/Dockerfile  
          push: true
          tags: |
            ghcr.io/${{ steps.repo.outputs.repo }}/${{ matrix.service }}:${{ needs.detect-changes.outputs.short_sha }}
            ghcr.io/${{ steps.repo.outputs.repo }}/${{ matrix.service }}:latest
          build-args: |
            SERVICE_NAME=${{ matrix.service }}

  trigger-deployment-workflow:
    needs: [detect-changes, build-and-push]
    runs-on: [self-hosted, k3s, pixels]
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        service: ${{ fromJson(needs.detect-changes.outputs.matrix).service }}
    steps:
      - name: Install Argo CLI
        run: |
          if ! command -v argo &> /dev/null; then
            curl -sLO https://github.com/argoproj/argo-workflows/releases/download/v3.5.2/argo-linux-amd64.gz
            gunzip argo-linux-amd64.gz
            chmod +x argo-linux-amd64
            sudo mv argo-linux-amd64 /usr/local/bin/argo
          fi

      - name: Trigger Argo Workflow
        run: |
          # Submit workflow for this service
          argo submit --from workflowtemplate/pixels-deployment-pipeline \
            --namespace argo \
            --parameter service-name=${{ matrix.service }} \
            --parameter image-tag=${{ needs.detect-changes.outputs.short_sha }} \
            --parameter environment=staging \
            --parameter repo-url=https://github.com/${{ github.repository }}.git \
            --wait \
            --log
          
          echo "âœ… Deployment workflow completed for ${{ matrix.service }}:${{ needs.detect-changes.outputs.short_sha }}"