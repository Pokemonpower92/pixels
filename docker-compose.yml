version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: ./build/Dockerfile.dev
    ports:
      - "8083:8080"
    volumes:
      - .:/app
      - go-mod-cache:/go/pkg/mod
    environment:
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8080
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=images
    command: ["air", "-c", ".air.toml"]  
    depends_on:
      postgres:
        condition: service_healthy
      migrator:
        condition: service_completed_successfully

  postgres:
    image: postgres:13
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=images
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  migrator:
    build:
      context: .
      dockerfile: ./build/Dockerfile.dev
    volumes:
      - .:/app
      - go-mod-cache:/go/pkg/mod
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=images
    command: >
      sh -c "go run cmd/migrate/main.go"
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres-data:
  go-mod-cache:
